version: '3'
services:
  proxy:
    image: traefik:1.7.10-alpine
    ports:
    - "5000:8081"
    volumes:
    - ./wharf-docker-compose/traefik:/etc/traefik # Traefik configuration file
## Uncomment to also host web via docker-compose
#  web:
#    build: wharf-web
  api:
    build:
      context: wharf-api
      args:
        BUILD_VERSION: local docker-compose
    ports:
    - "5001:8080"
    environment:
    - DBHOST=db
    - DBUSER=postgres
    - DBPASS=OL2AEn6lgj6ekajgKJIOanefgegnksngpoetPIEQjhankf7412
    - DBPORT=5432
    - DBNAME=wharf
    - DBLOG=true
    - RABBITMQUSER=guest
    - RABBITMQPASS=guest
    - RABBITMQHOST=rabbitmq
    - RABBITMQPORT=5672
    - RABBITMQVHOST=
    - RABBITMQNAME=wharf_queue
    - RABBITMQDISABLESSL=TRUE
    - RABBITMQCONNATTEMPTS=10
    - MOCK_LOCAL_CI_RESPONSE=true
    - ALLOW_CORS=YES
    - WHARF_INSTANCE=local
  provider-gitlab:
    build:
      context: wharf-provider-gitlab
      args:
        BUILD_VERSION: local docker-compose
    ports:
    - "5002:8080"
    environment:
    - WHARF_API_URL=http://api:8080
    - ALLOW_CORS=YES
  provider-github:
    build:
      context: wharf-provider-github
      args:
        BUILD_VERSION: local docker-compose
    ports:
    - "5003:8080"
    environment:
    - WHARF_API_URL=http://api:8080
    - ALLOW_CORS=YES
  provider-azuredevops:
    build:
      context: wharf-provider-azuredevops
      args:
        BUILD_VERSION: local docker-compose
    ports:
    - "5004:8080"
    environment:
    - WHARF_API_URL=http://api:8080
    - ALLOW_CORS=YES
  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: OL2AEn6lgj6ekajgKJIOanefgegnksngpoetPIEQjhankf7412
    ports:
      - 5432:5432
    volumes:
      - ./api-postgresql-data:/var/lib/postgresql/data
## Uncomment to enable RabbitMQ
#  rabbitmq:
#    image: "rabbitmq:3-management"
#    ports:
#      - "5672:5672"
#      - "15672:15672"
